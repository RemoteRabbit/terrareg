-- Auto-generated configuration validation
-- DO NOT EDIT - Generated by generate_config_schema.lua

local M = {}

--- Validate configuration against schema
-- @param config table Configuration to validate
-- @return boolean, string|nil Success status and error message
function M.validate_config(config)
  if type(config) ~= "table" then
    return false, "Configuration must be a table"
  end

  -- Validate option1
  if config.option1 ~= nil then
    if type(config.option1) ~= "boolean" then
      return false, "option1 must be a boolean"
    end
  end

  -- Validate option2
  if config.option2 ~= nil then
    if type(config.option2) ~= "string" then
      return false, "option2 must be a string"
    end
  end

  -- Validate debug
  if config.debug ~= nil then
    if type(config.debug) ~= "boolean" then
      return false, "debug must be a boolean"
    end
  end

  return true
end

--- Get default configuration
-- @return table Default configuration
function M.get_default_config()
  return {}
end

return M
